<?php
// +----------------------------------------------------------------------
// | RelationTest.php [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2016-2017 limingxinleo All rights reserved.
// +----------------------------------------------------------------------
// | Author: limx <715557344@qq.com> <https://github.com/limingxinleo>
// +----------------------------------------------------------------------
namespace Tests\Models;

use App\Common\Model\SqlCount;
use App\Models\Book;
use App\Models\Role;
use App\Models\Title;
use App\Models\User;
use Tests\UnitTestCase;

class RelationTest extends UnitTestCase
{
    protected function setUp()
    {
        SqlCount::getInstance()->flush();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testHasMany()
    {
        $user = User::findFirst(1);

        /** @var Book $book */
        foreach ($user->book as $book) {
            $books[] = $book->name;
        }

        $this->assertEquals(
            [
                'Hello World',
                '7天放弃PHP',
                '1周精通Go语言'
            ],
            $books
        );
    }

    public function testHasOne()
    {
        $user = User::findFirst(1);

        /** @var Role $role */
        $role = $user->role;

        $this->assertEquals('admin', $role->name);
    }

    public function testBelongsTo()
    {
        $book = Book::findFirst(1);

        /** @var User $user */
        $user = $book->user;

        $this->assertEquals('limx', $user->name);

        $book = Book::findFirst(2);

        /** @var User $user */
        $user = $book->user;

        $this->assertEquals('limx', $user->name);

        $sqlCount = SqlCount::getInstance()->count;

        $this->assertEquals(3, $sqlCount);
    }

    public function testHasManyToMany()
    {
        $user = User::findFirst(1);

        /** @var Title $title */
        $title = $user->title;

        $title = array_column($title->toArray(), 'name');

        $this->assertEquals([
            'PHP开发',
            'PHP架构师'
        ], $title);
    }

    public function testReloadRelation()
    {
        $user = User::findFirst(1);

        $seeds = $user->reloadRelation()->seeds;

        $this->assertTrue(count($seeds) > 0);
    }
}
